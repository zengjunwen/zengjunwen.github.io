<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Jon's Site Blog</title>
        <link>https://zengjunwen.github.io/blog</link>
        <description>Jon's Site Blog</description>
        <lastBuildDate>Mon, 28 Aug 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[2023-08-28 ARTS]]></title>
            <link>https://zengjunwen.github.io/blog/2023-08-28 ARTS</link>
            <guid>https://zengjunwen.github.io/blog/2023-08-28 ARTS</guid>
            <pubDate>Mon, 28 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[A]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="a">A<a href="#a" class="hash-link" aria-label="Direct link to A" title="Direct link to A">​</a></h3><p>doing</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="r">R<a href="#r" class="hash-link" aria-label="Direct link to R" title="Direct link to R">​</a></h3><p>最近在阅读系统设计的英文版，具体的内容我们在S部分进行分享。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="t">T<a href="#t" class="hash-link" aria-label="Direct link to T" title="Direct link to T">​</a></h3><p>最近准备出行，需要购买8张机票，为了剩些钱，需要时刻关注机票的价格变化，每次手动查票都很麻烦。 了解了下python的selenium库，能够省去一些操作。
下面简单演示下安装和操作方法。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="安装chromedriver">安装chromedriver<a href="#安装chromedriver" class="hash-link" aria-label="Direct link to 安装chromedriver" title="Direct link to 安装chromedriver">​</a></h4><p>法一：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ brew </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> chromedriver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ chromedriver --version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ChromeDriver </span><span class="token number" style="color:#36acaa">116.0</span><span class="token plain">.5845.96 </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">1a391816688002153ef791ffe60d9e899a71a037-refs/branch-heads/5845@</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">#1382</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>法二：</p><p>从 <a href="https://googlechromelabs.github.io/chrome-for-testing/" target="_blank" rel="noopener noreferrer">https://googlechromelabs.github.io/chrome-for-testing/</a> 下载chromedrive</p><p>将可执行文件放入到<code>/usr/local/bin</code></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="安装对应版本的chrom">安装对应版本的Chrom<a href="#安装对应版本的chrom" class="hash-link" aria-label="Direct link to 安装对应版本的Chrom" title="Direct link to 安装对应版本的Chrom">​</a></h4><p>版本尽量一致。<a href="https://googlechromelabs.github.io/chrome-for-testing/" target="_blank" rel="noopener noreferrer">https://googlechromelabs.github.io/chrome-for-testing/</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="运行">运行<a href="#运行" class="hash-link" aria-label="Direct link to 运行" title="Direct link to 运行">​</a></h4><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> selenium </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> webdriver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> selenium</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">webdriver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">common</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">keys </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> Keys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 启动浏览器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chrome_options </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> webdriver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ChromeOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chrome_options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">add_argument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">driver </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> webdriver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Chrome</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/opt/homebrew/bin/chromedriver"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">options</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">chrome_options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 需要安装 Chrome 浏览器和对应的 ChromeDriver</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"https://www.csair.com/cn/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 替换为你要爬取的机票网站 URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 定位并填写出发地和目的地</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">departure_input </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">find_element_by_id</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"fDepCity"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 根据实际网页的元素 ID 进行定位</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">departure_input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 清空输入框内容</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">departure_input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_keys</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"郑州"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 填入出发地</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">destination_input </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">find_element_by_id</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"fArrCity"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 根据实际网页的元素 ID 进行定位</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">destination_input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 清空输入框内容</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">destination_input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_keys</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"贵阳"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 填入目的地</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 选择出发时间</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">date_script </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token triple-quoted-string string" style="color:#e3116c">'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">var departure_time_input = document.getElementById("fDepDate");  // 根据实际网页的元素 ID 进行定位</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">departure_time_input.removeAttribute("readonly");  // 移除 readonly 属性</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">departure_time_input.value = "2023-09-18";  // 设置日期，替换为你想选择的日期</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">'''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">execute_script</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">date_script</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 定位并点击"立即查询"按钮</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search_button </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">find_element_by_class_name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"searchBtn"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 根据按钮的类名进行定位</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search_button</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 点击按钮</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="s">S<a href="#s" class="hash-link" aria-label="Direct link to S" title="Direct link to S">​</a></h3><p>如何进行系统分析设计？</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-需求澄清">Step 1 需求澄清<a href="#step-1-需求澄清" class="hash-link" aria-label="Direct link to Step 1 需求澄清" title="Direct link to Step 1 需求澄清">​</a></h4><p>尽可能的了解需要解决的问题边界。系统设计是一个开放式问题，没有一个标准答案，所以在进行系统设计前，我们要搞清楚那些模凌两可的问题。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-接口定义">Step 2 接口定义<a href="#step-2-接口定义" class="hash-link" aria-label="Direct link to Step 2 接口定义" title="Direct link to Step 2 接口定义">​</a></h4><p>定义系统需要提供的接口。这不仅将建立系统所期望的确切合同，而且还将确保我们没有得到任何错误的需求。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-粗略的评估">Step 3 粗略的评估<a href="#step-3-粗略的评估" class="hash-link" aria-label="Direct link to Step 3 粗略的评估" title="Direct link to Step 3 粗略的评估">​</a></h4><p>初期，粗略考虑系统的扩展性是必不可少的，有助于在未来聚焦分区、负载均衡和缓存等设计。这里可以先考虑以下几个部分：</p><ul><li>系统大概需要多少存储</li><li>系统的请求量是多少？需要的带宽大概是多少。</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-定义数据模型">Step 4 定义数据模型<a href="#step-4-定义数据模型" class="hash-link" aria-label="Direct link to Step 4 定义数据模型" title="Direct link to Step 4 定义数据模型">​</a></h4><p>定义数据模型能够清晰的表达数据在系统的不同组建之间是如何流动的，同时也是我们进行数据分区的基础。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-5-高层次的设计">Step 5 高层次的设计<a href="#step-5-高层次的设计" class="hash-link" aria-label="Direct link to Step 5 高层次的设计" title="Direct link to Step 5 高层次的设计">​</a></h4><p>从宏观角度画一个各模块的框图，大概如下：</p><p><img loading="lazy" alt="image-20230903215608188" src="/assets/images/image-20230903215608188-0ac40591a98d9554b0e787b9220aa9ca.png" width="1436" height="734" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-6-详细设计">Step 6 详细设计<a href="#step-6-详细设计" class="hash-link" aria-label="Direct link to Step 6 详细设计" title="Direct link to Step 6 详细设计">​</a></h4><p>深入每个模块进行详细设计，对于不同场景有不同的设计方法，阐述每种方案的优缺点。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-7-识别并解决系统瓶颈">Step 7 识别并解决系统瓶颈<a href="#step-7-识别并解决系统瓶颈" class="hash-link" aria-label="Direct link to Step 7 识别并解决系统瓶颈" title="Direct link to Step 7 识别并解决系统瓶颈">​</a></h4><p>例如：</p><ol><li>系统是否有单点故障？</li><li>数据是否需要副本？</li><li>如何监控系统的性能？</li></ol>]]></content:encoded>
            <category>ARTS</category>
        </item>
        <item>
            <title><![CDATA[安装和使用Vagrant]]></title>
            <link>https://zengjunwen.github.io/blog/安装和使用Vagrant</link>
            <guid>https://zengjunwen.github.io/blog/安装和使用Vagrant</guid>
            <pubDate>Sun, 27 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[本文作为指导手册，主要用于指导用户在M2芯片的苹果机器上安装Vagrant、VMWare，并基于Vagrant管理VMWare上的虚拟机。]]></description>
            <content:encoded><![CDATA[<p>本文作为指导手册，主要用于指导用户在M2芯片的苹果机器上安装Vagrant、VMWare，并基于Vagrant管理VMWare上的虚拟机。</p><p>1、安装Rosetta</p><p>帮助运行在x86上运行的代码运行在M2芯片上。
<code>/usr/sbin/softwareupdate --install-rosetta --agree-to-license</code></p><p>2、安装Vagrant</p><p><code>brew install hashicorp/tap/hashicorp-vagrant</code></p><p>3、安装VMWare Fusion Pro</p><p><a href="https://www.vmware.com/cn/products/fusion/fusion-evaluation.html" target="_blank" rel="noopener noreferrer">link</a></p><p>4、安装Vagrant VMWare provider</p><p><code>brew install --cask vagrant-vmware-utility</code></p><p><code>vagrant plugin install vagrant-vmware-desktop</code></p><p>5、创建Vagrant file</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Vagrant.configure("2") do </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.box = "spox/ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">arm"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.box_version = "1.0.0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.provider "vmware_desktop" do </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">vb</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    vb.gui = true </span><span class="token comment" style="color:#999988;font-style:italic"># 虚拟机打卡gui</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    vb.memory = "1024"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>7、 启动虚拟机</p><p><code>vagrant up</code></p><p>8、登陆虚拟机</p><p><code>vagrant ssh</code></p>]]></content:encoded>
            <category>杂记</category>
        </item>
        <item>
            <title><![CDATA[2023-08-21 ARTS]]></title>
            <link>https://zengjunwen.github.io/blog/2023-08-21 ARTS</link>
            <guid>https://zengjunwen.github.io/blog/2023-08-21 ARTS</guid>
            <pubDate>Mon, 21 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[A]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="a">A<a href="#a" class="hash-link" aria-label="Direct link to A" title="Direct link to A">​</a></h3><p><a href="https://leetcode.cn/problems/binary-tree-maximum-path-sum/" target="_blank" rel="noopener noreferrer">124. 二叉树中的最大路径和</a></p><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * Definition for a binary tree node.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * type TreeNode struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *     Val int</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *     Left *TreeNode</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *     Right *TreeNode</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">maxPathSum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">root </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">TreeNode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    maxSum </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MinInt32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">dfs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">root</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">maxSum</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> maxSum</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dfs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">root </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">TreeNode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> maxSum </span><span class="token operator" style="color:#393A34">*</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> root </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tempSum</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">maxSubPathSum </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> root</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Val</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> root</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Val</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    maxLeftNodeSum </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain">  </span><span class="token function" style="color:#d73a49">dfs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">root</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Left</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> maxSum</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> maxLeftNodeSum </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tempSum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> maxLeftNodeSum</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    maxRightNodeSum </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dfs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">root</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Right</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> maxSum</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> maxRightNodeSum </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tempSum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> maxRightNodeSum</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">maxSum </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> tempSum </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">maxSum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tempSum</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    maxSubPathSum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">maxLeftNodeSum</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> maxRightNodeSum</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> maxSubPathSum</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> b </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="r">R<a href="#r" class="hash-link" aria-label="Direct link to R" title="Direct link to R">​</a></h3><p>最近在看《Observability Engineering》英文原著，在这部分我们简单聊下“The Mathematical Definition of Observability” 和 “Applying Observability to Software Systems”。</p><p>学过《现代控制理论》的同学应该对能观性有基本的认识。能观性与能控性在1960年被卡尔曼提出，它是最优控制和最优估计的设计基础。在控制理论中，能观性的数学含义如下：如果对于任意给定的输入u，在有限的观测时间范围内<!-- -->[t0,tf]<!-- -->期间输出y(t)能唯一地确定系统在t0时刻的状态，则称t0时的系统状态能观测，若系统的每一个状态都是能观测的，则称系统是状态完全能观测的，简称能观的。</p><p>如何将能观性应用到软件系统呢？我们可从以下几个问题着手：</p><ol><li>理解应用的内部运作。</li><li>了解应用程序可能会进入的任何系统状态，即使是从未见过并的状态。</li><li>使用外部工具来观察和查询了解系统的内部状态。</li><li>理解内部状态而无需发布任何新的自定义代码来处理它(需要事先了解它)。</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="t">T<a href="#t" class="hash-link" aria-label="Direct link to T" title="Direct link to T">​</a></h3><p>Vagrant作为一款管理虚拟机工具，能够帮助开发者快速搭建和管理自己的开发环境。
<a href="https://zengjunwen.github.io/blog/%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8Vagrant" target="_blank" rel="noopener noreferrer">安装手册-Apple M2</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="s">S<a href="#s" class="hash-link" aria-label="Direct link to S" title="Direct link to S">​</a></h3><p>今天讲一些和系统设计相关的一些东西，后面也会写一系列系统设计的文章。系统设计，从宏观角度来讲，有一套成熟的方法论，大家应该都知道，这套方法论叫系
统工程，当然，我们不会从系统工程这么专业的角度来聊系统设计，相反，我想结合工作中最长遇到的问题来聊一些和系统设计相关的东西。</p><p>在软件开发领域，对业务而言，提供一个高可靠的系统至关重要。如何衡量系统的可靠性？通过查询相关文献，很少有一个严格的标准来定义软件系统的稳定性。反而
从理论的角度来，通过抽象的数学公式来定义系统的可靠性，在很多论文里都能查到。对于软件系统，我认为如下定义系统的可靠性，可能更通俗易懂：“软件系统的可靠
性表示系统正常处理任务的概率”。系统正常运行的概率越高，系统越可靠。当然这个说法并不是没有问题。采用什么手段计算系统的可靠性是很值得讨论的一个问题。在
不同场景下，系统正常处理任务的概率可能是不同的。我们需要考虑不同场景来衡量系统的可靠性。根据这些理解，我们很容理解为什么系统要设计时，要考虑以下问题了：</p><ol><li>高并发，保证在 请求量剧增时，系统依然正常运行。</li><li>高可用，不因为某些服务节点挂了，导致系统不可用。</li><li>过载保护，不因出乎意料的流量导致服务不可用。</li><li>隔离，防止问题在系统扩散。</li><li>灰度，新功能逐渐上线。</li></ol><p>好了，今天就聊到这里。后续我们聊一聊系统的可观测性和可维护性。</p><p><img loading="lazy" alt="image-20230827204625000" src="/assets/images/image-20230827204625000-8a5d157aed93e5ff499f45cd85c5c957.png" width="2150" height="1875" class="img_ev3q"></p>]]></content:encoded>
            <category>ARTS</category>
        </item>
        <item>
            <title><![CDATA[2023-08-14 ARTS]]></title>
            <link>https://zengjunwen.github.io/blog/2023-08-14 ARTS</link>
            <guid>https://zengjunwen.github.io/blog/2023-08-14 ARTS</guid>
            <pubDate>Mon, 14 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[A]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="a">A<a href="#a" class="hash-link" aria-label="Direct link to A" title="Direct link to A">​</a></h3><p><a href="https://leetcode.cn/problems/critical-connections-in-a-network/description/" target="_blank" rel="noopener noreferrer">Leetcode1192</a> 图论中的关键链接查找。</p><p>一个边是关键路径，路径不在环中是其充要条件。 使用深度优先搜索查找环：</p><ol><li>使用邻接表来表示图；</li><li>任选一个节点进行深度优先访问，我们选择下标为<!-- -->[0,0]<!-- -->的节点；</li><li>记录每个节点的访问深度；</li><li>如果子节点的深度小于等于当前节点了，说明找到环了，去掉该边；</li><li>同时记录返回当前节点的最小深度；</li><li>深度优先搜索遍历完后，剩下的边就是关键路径。</li></ol><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">criticalConnections</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> connections </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # generate adjacency list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    g </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> link </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> connections </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        g</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> link</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        g</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> link</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    deep </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    result </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    count </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> dfs </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> node </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dfs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> node </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> l</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> l</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> count </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        index </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> child </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> g</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> parent </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> child </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">child</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dfs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> child</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">child</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> index </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> parent </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> node</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">parent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> node</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> deep</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">dfs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> b </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="r">R<a href="#r" class="hash-link" aria-label="Direct link to R" title="Direct link to R">​</a></h3><p>负责公司的文件系统有一段时间了，最近在做些总结，对很多细节懵懵懂懂，比如DB是如何使用LSM-Tree的。为了能全面了解LSM-Tree，特地找了一篇综述来阅读，论文名字为 “LSM-based Storage Techniques: A Survey” 。这篇文章于2019年发表，首先介绍了LSM-Tree的广泛应用以及为什么要使用LSM-Tree，他和B+Tree有什么区别。由于传统的LSM-Tree存在一系列的问题，这些问题可以通过不同的合并方式来解决，实现在某些指标之间达到平衡，毕竟鱼和熊掌不能兼得。更多内容及思考我把它放到S里去讲。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="t">T<a href="#t" class="hash-link" aria-label="Direct link to T" title="Direct link to T">​</a></h3><p>我想分享的一个技术是关于Delve调试工具，用于远程debug程序。当我们开发完某个功能时，可能这个功能对上下游有依赖，本地不好调试，在测试环境通过日志无法观察程序内部状态的流转。Delve可以很好的帮助我们解决这个问题。具体使用可查看<a href="https://github.com/go-delve/delve" target="_blank" rel="noopener noreferrer">指导文档</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="s">S<a href="#s" class="hash-link" aria-label="Direct link to S" title="Direct link to S">​</a></h3><p>网上有大量的文件介绍B+树在MySQL中的使用，B+树能够很好的查询数据能力，特别是排好序的范围查询，这些数据是按照主键排好序存放在磁盘中的。由于数据写入要排序，导致写入的性能下降。LSM-Tree的思路是，我们可以将写入的数据写入到内存中并写WAL日志，这样能够极大的提升写入速度，通过设定规则，在满足条件时将数据与磁盘中数据合并并排序。排序导致的写放大问题可通过分区来解决，针对分区的数据是否有重叠的情况，将合并算法分为Tiering和leveling策略。Tiering有读放大，leveling有写放大的问题，为了平衡两者差异，RocksDB同时使用了这两种合并策略。“LSM-based Storage Techniques: A Survey”这篇论文将LSM-tree的性能评估指标分为几类：写放大、读放大和空间放大。三者不可兼得，至于如何取舍，需要我们根据具体的业务场景进行选择。如何自动调优是个很值得研究的方向，如果数据库能根据业务场景提取相关特征，通过自适应的方式调整合并方式，从而达到一个相对最优的状态，这对开发者绝对是极大的利好，特别在业务天天变的当下。</p>]]></content:encoded>
            <category>ARTS</category>
        </item>
        <item>
            <title><![CDATA[Vagrant]]></title>
            <link>https://zengjunwen.github.io/blog/2023/07/13/杂记/Vagrant</link>
            <guid>https://zengjunwen.github.io/blog/2023/07/13/杂记/Vagrant</guid>
            <pubDate>Thu, 13 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[创建一个名为 Vagrantfile 的文件]]></description>
            <content:encoded><![CDATA[<p>创建一个名为 Vagrantfile 的文件</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># -*- mode: ruby -*-</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># vi: set ft=ruby :</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># configures the configuration version (we support older styles for</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># backwards compatibility). Please don't change it unless you know what</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># you're doing.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Vagrant.configure("2") do |config|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.define "jw"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.box = "ubuntu/20.04.1TLS"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # config.vm.box_check_update = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #config.vm.network "forwarded_port", guest: 26379, host: 26379</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #config.vm.network "forwarded_port", guest: 26479, host: 26479</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #config.vm.network "forwarded_port", guest: 26579, host: 26579</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #config.vm.network "forwarded_port", guest: 6379, host: 6379</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #config.vm.network "forwarded_port", guest: 6479, host: 6479</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #config.vm.network "forwarded_port", guest: 3306, host: 6606</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #config.vm.network "forwarded_port", guest: 9094, host: 9094, host_ip: "192.168.33.70"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.network "private_network", ip: "10.10.10.10"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.network "private_network", ip: "192.168.33.70"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # config.vm.network "public_network"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # 将当前目录挂载到虚拟机的 /Data 目录下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.synced_folder ".", "/Data", type: "virtualbox"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.provider "virtualbox" do |vb|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #   # Display the VirtualBox GUI when booting the machine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #   vb.gui = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  #</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # Customize the amount of memory on the VM:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    vb.memory = "1024"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    vb.cpus = 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  if Vagrant::Util::Platform.windows?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ansible = 'ansible_local'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ansible = 'ansible'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config.vm.provision "shell", inline: &lt;&lt;-SHELL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     sudo setenforce 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     sudo chown -R vagrant:vagrant /home/vagrant/go</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     mkdir -p /data/running/admin_server/app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     sudo ln -sf  /home/vagrant/go/src/git.garena.com/seatalk-server/static_assets/admin/ /data/running/admin_server/app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  SHELL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[本地编译K8s]]></title>
            <link>https://zengjunwen.github.io/blog/2023/07/12/K8s/本地编译K8s</link>
            <guid>https://zengjunwen.github.io/blog/2023/07/12/K8s/本地编译K8s</guid>
            <pubDate>Wed, 12 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[本文所示编译与调试环境：]]></description>
            <content:encoded><![CDATA[<p>本文所示编译与调试环境：</p><ul><li>操作系统：</li><li>Kubernetes版本：</li></ul><h1>依赖安装</h1><ul><li>Go 1.20+：<a href="https://go.dev/doc/install" target="_blank" rel="noopener noreferrer">注意当前运行 Kubernetes 版本所需的 Go 版本</a></li><li>Docker：<a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noopener noreferrer">https://docs.docker.com/engine/install/ubuntu/</a></li><li>Etcd：hack/install-etcd.sh 安装后执行export PATH="/Users/junwen.zeng/go/src/kubernetes/third_party/etcd:${PATH}"</li><li>rsync：文件同步与传输工具（<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FWayneD%2Frsync%2Fblob%2Fmaster%2FINSTALL.md" target="_blank" rel="noopener noreferrer">安装指南</a>）</li><li>cfssl：sudo apt install golang-cfssl</li><li>delve：<a href="https://github.com/go-delve/delve/tree/master/Documentation/installation#installation" target="_blank" rel="noopener noreferrer">Go 语言调试工具</a></li></ul><p>安装etcd hack/install-etcd.sh</p><p>在启动前 etcd 可能已经启动并占用端口，执行 sudo service etcd stop 停止服务</p><p>启动服务 sudo ./hack/local-up-cluster.sh -O</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dlv </span><span class="token builtin class-name">exec</span><span class="token plain">  /home/vagrant/go/src/kubernetes/_output/bin/kube-apiserver  --headless --listen</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">:12345 --api-version</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> --log --log-output</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debugger,gdbwire,lldbout,debuglineerr,rpc,dap,fncall,minidump --log-dest</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/deleve.log -- --authorization-mode</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">Node,RBAC  --cloud-provider</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --cloud-config</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">   --v</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> --vmodule</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --audit-policy-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/local-up-cluster.sh.MnE0ok/kube-audit-policy-file --audit-log-path</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/kube-apiserver-audit.log --authorization-webhook-config-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --authentication-token-webhook-config-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --cert-dir</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes --egress-selector-config-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/local-up-cluster.sh.MnE0ok/kube_egress_selector_configuration.yaml --client-ca-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/client-ca.crt --kubelet-client-certificate</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/client-kube-apiserver.crt --kubelet-client-key</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/client-kube-apiserver.key --service-account-key-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/local-up-cluster.sh.MnE0ok/kube-serviceaccount.key --service-account-lookup</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true --service-account-issuer</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">https://kubernetes.default.svc --service-account-jwks-uri</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">https://kubernetes.default.svc/openid/v1/jwks --service-account-signing-key-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/local-up-cluster.sh.MnE0ok/kube-serviceaccount.key --enable-admission-plugins</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,Priority,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction --disable-admission-plugins</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --admission-control-config-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --bind-address</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0.0</span><span class="token plain">.0.0 --secure-port</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">6443</span><span class="token plain"> --tls-cert-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/serving-kube-apiserver.crt --tls-private-key-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/serving-kube-apiserver.key --storage-backend</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">etcd3 --storage-media-type</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">application/vnd.kubernetes.protobuf --etcd-servers</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">http://127.0.0.1:2379 --service-cluster-ip-range</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">10.0</span><span class="token plain">.0.0/24 --feature-gates</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">AllAlpha</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">false --external-hostname</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">localhost --requestheader-username-headers</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">X-Remote-User --requestheader-group-headers</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">X-Remote-Group --requestheader-extra-headers-prefix</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">X-Remote-Extra- --requestheader-client-ca-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/request-header-ca.crt --requestheader-allowed-names</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">system:auth-proxy --proxy-client-cert-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/client-auth-proxy.crt --proxy-client-key-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/run/kubernetes/client-auth-proxy.key --cors-allowed-origins</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"/127.0.0.1(:[0-9]+)?$,/localhost(:[0-9]+)?$"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意："/127.0.0.1(:<!-- -->[0-9]<!-- -->+)?$,/localhost(:<!-- -->[0-9]<!-- -->+)?$" 要加双引号。<code>dlv exec  /home/vagrant/go/src/kubernetes/_output/bin/kube-apiserver  --headless --listen=:12345 --api-version=2 --log --log-output=debugger,gdbwire,lldbout,debuglineerr,rpc,dap,fncall,minidump --log-dest=/tmp/deleve.log --</code> 为 dlv 参数，再后面的为调试程序的参数。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Go对称加密]]></title>
            <link>https://zengjunwen.github.io/blog/Go对称加密</link>
            <guid>https://zengjunwen.github.io/blog/Go对称加密</guid>
            <pubDate>Tue, 11 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[对称密码算法可以分为分组密码和流密码两种 。]]></description>
            <content:encoded><![CDATA[<p>对称密码算法可以分为分组密码和流密码两种 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="分组密码">分组密码<a href="#分组密码" class="hash-link" aria-label="Direct link to 分组密码" title="Direct link to 分组密码">​</a></h2><p>分组密码 (block cipher) 是每次只能处理特定长度的一块数据 的一类密码算法，这里的 “一块”就称为分组 (block)。 此外，一个分组的比特数就称为分组长度 (blocklength)。</p><p> DES 和三重 DES 的分组长度都是 64 比特。 这些密码算法一次只能加密 64 比特的明 文，并生成 64 比特的密文 。</p><p>AES的分组长度为 128比特，因此AES一次可加密 128比特的明文，并生成 128比特的 密文。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="流密码">流密码<a href="#流密码" class="hash-link" aria-label="Direct link to 流密码" title="Direct link to 流密码">​</a></h2><p>流密码 (stream cipher) 是是一种逐位或逐字节加密的密码算法。它以密钥为输入，并根据密钥生成一个无限长的伪随机密钥流（keystream）。将明文与伪随机密钥流进行按位异或运算，从而实现加密和解密过程。由于流密码逐位操作，因此适合于对连续数据流进行实时加密，例如通信中的数据传输。</p><p>分组密码处理完 一个分组就结束了，因此不需要通过内部状态来记录加密的进度;相对地， 流密码是对一 串数据流进行连续处理，因此需要保持内部状态 。<strong>分组密码和流密码并非相互对立的，流密码可以使用分组密码来实现。一种常见的做法是将分组密码模式（例如CTR模式或OFB模式）与AES结合使用，以将AES转化为适用于连续数据流的流密码。这些模式利用AES的加密功能生成一个伪随机密钥流（keystream），然后将明文与伪随机密钥流进行按位异或运算来实现加密。</strong></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="go对称加密源代码">Go对称加密源代码<a href="#go对称加密源代码" class="hash-link" aria-label="Direct link to Go对称加密源代码" title="Direct link to Go对称加密源代码">​</a></h2><p>在 Go 的cipher包中定义了三个接口：</p><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Block </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">BlockSize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">Encrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dst</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> src </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">Decrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dst</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> src </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Stream </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">XORKeyStream</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dst</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> src </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> BlockMode </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">BlockSize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">CryptBlocks</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dst</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> src </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Block 为分组加密，Stream 为流加密，BlockMode表示块加密的模式。我们着重看下分组加密，因为在工作中使用得相对较多。</p><p><img loading="lazy" alt="image-20230711124809449" src="/assets/images/image-20230711124809449-0728e6fb6020fef436bd7e886e0addd7.png" width="2750" height="966" class="img_ev3q"></p><p>可以看到，Block 分别由aesCipher、aesCipherAsm、aesCipherGCM、desCipher 和tripleDESCipher实现。</p><p>aesCipher：为 go 实现的对称加密。
aesCipherAsm：为支持ASM指令集的对称加密。
aesaesCipherGCM：为支持ASM指令集的GCM。
desCipher和tripleDESCipher：DES 和三重 DES。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="block-的-encrypt-方法和-decrypt-方法">Block 的 Encrypt 方法和 Decrypt 方法<a href="#block-的-encrypt-方法和-decrypt-方法" class="hash-link" aria-label="Direct link to Block 的 Encrypt 方法和 Decrypt 方法" title="Direct link to Block 的 Encrypt 方法和 Decrypt 方法">​</a></h3><p>Encrypt 和 Decrypt 调用一次只能对一个 block 进行加密或解密。当需要加密的明文或需要解密的密文远大于 block size 时，需要调用多次。对于支持并行加解密的模式，我们可以同步并行调用 Encrypt 和 Decrypt 实现。</p><p>在 BlockMode 的实现中，CryptBlocks 方法对Encrypt、Decrypt进行包装，从而不需要进行加解密的多次调用，但由于实现均为串行，对于支持并行的模式性能会有所下降。</p><p>Go 语言中，使用 <code>aes.NewCipher(tokenBytes)</code> 创建 block。下面我们来看下如何对已创建的 block 指定加密模式。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加密模式">加密模式<a href="#加密模式" class="hash-link" aria-label="Direct link to 加密模式" title="Direct link to 加密模式">​</a></h2><p>Go 语言中的 cipher 包提供了一些列的方法针对 block 指定我们想要的加密模式：</p><p><img loading="lazy" alt="image-20230711162420959" src="/assets/images/image-20230711162420959-8af0e533cec428fa39ea9d7f2cfc1ba3.png" width="1926" height="492" class="img_ev3q"></p><p><strong>其中没有 ECB 模式，因为最基本的 Block 接口实现就已经是 ECB 模式了。</strong></p><p>各模式的 prons and cons 如下：</p><table><thead><tr><th>Mode</th><th>Acronym</th><th>Advantages</th><th>Disadvantages</th><th>Recommendation</th></tr></thead><tbody><tr><td>Electronic CodeBook</td><td>ECB</td><td>Simple, fast, supports parallel encryption/decryption</td><td>Plaintext repetition is reflected in ciphertext, not recommended for use, ciphertext can be manipulated by deleting/replacing blocks</td><td>Not recommended by CRYPTREC</td></tr><tr><td>Cipher Block Chaining</td><td>CBC</td><td>Supports parallel decryption, can decrypt any ciphertext block, no need for padding</td><td>Plaintext repetition is reflected in ciphertext, vulnerable to replay attacks, ciphertext block with some bit errors may affect corresponding plaintext block</td><td>Recommended by CRYPTREC</td></tr><tr><td>Cipher Feedback</td><td>CFB</td><td>Supports parallel decryption, can decrypt any ciphertext block, no need for padding</td><td>Plaintext repetition is reflected in ciphertext, vulnerable to replay attacks, ciphertext block with some bit errors may affect corresponding plaintext block</td><td>Recommended by CRYPTREC</td></tr><tr><td>Output Feedback</td><td>OFB</td><td>Supports parallel decryption, can decrypt any ciphertext block, no need for padding</td><td>Plaintext repetition is reflected in ciphertext, vulnerable to replay attacks, ciphertext block with some bit errors may affect corresponding plaintext block</td><td>Recommended by CRYPTREC</td></tr><tr><td>Counter</td><td>CTR</td><td>Supports parallel encryption/decryption, can decrypt any ciphertext block, no need for padding</td><td>Plaintext repetition is reflected in ciphertext, vulnerable to replay attacks, ciphertext block with some bit errors may affect corresponding plaintext block</td><td>Recommended by CRYPTREC</td></tr></tbody></table><p>其中 OFB 和 CTR 为流密码模式。</p><p>各算法的代码实现可以参考：<a href="http://liuqh.icu/2021/06/19/go/package/16-aes/" target="_blank" rel="noopener noreferrer">http://liuqh.icu/2021/06/19/go/package/16-aes/</a></p>]]></content:encoded>
            <category>杂记</category>
        </item>
        <item>
            <title><![CDATA[Pod的实现原理]]></title>
            <link>https://zengjunwen.github.io/blog/Pod的实现原理</link>
            <guid>https://zengjunwen.github.io/blog/Pod的实现原理</guid>
            <pubDate>Mon, 10 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Pod中托管了一个或多个容器。从“规格”的角度来看，Pod介于容器和VM之间——它比容器大，又远小于VM。在 Kubernets 的世界中，Pod 是进行服务部署的基本单位，Pod 部署操作是一个原子操作，即“要么全部成功，要么什么都不做”（all-or-nothing）。]]></description>
            <content:encoded><![CDATA[<p>Pod中托管了一个或多个容器。从“规格”的角度来看，Pod介于容器和VM之间——它比容器大，又远小于VM。在 Kubernets 的世界中，Pod 是进行服务部署的基本单位，Pod 部署操作是一个原子操作，即“要么全部成功，要么什么都不做”（all-or-nothing）。</p><p>Pod 的创建通过 kubelet 调用SyncPod来实现，主要为以下6步：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> 1. Compute sandbox and container changes.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 2. Kill pod sandbox if necessary.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 3. Kill any containers that should not be running.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 4. Create sandbox if necessary.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 5. Create ephemeral containers.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 6. Create init containers.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 7. Resize running containers (if InPlacePodVerticalScaling==true)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 8. Create normal containers.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="image-20230710235705493" src="/assets/images/image-20230710235705493-2acfaaceb2433e28548e3f32550994dc.png" width="2964" height="640" class="img_ev3q"></p><p>以下是对每个步骤功能的解释：</p><ol><li>计算沙箱和容器的更改：该步骤用于计算Pod沙箱和容器的更改。它可能包括添加、删除或更新容器以及其他相关的配置更改。</li><li>如果需要，终止Pod沙箱：在此步骤中，如果存在旧的Pod沙箱，且需要进行更改或重新创建，则会终止该旧沙箱。</li><li>终止不应运行的任何容器：在这一步中，终止那些不应该继续运行的容器。可能是因为它们已经过时或配置有误。</li><li>如有必要，创建沙箱：如果没有有效的Pod沙箱存在，此步骤将创建一个新的Pod沙箱。沙箱是运行Pod的隔离环境。</li><li>创建临时容器：在此步骤中，创建临时容器。这些容器通常是用于临时任务或特定操作的短暂性容器。</li><li>创建初始化容器：如果Pod定义中定义了初始化容器，此步骤将根据定义创建并运行初始化容器。初始化容器在主容器之前运行，用于完成一些预备工作或设置特定环境。</li><li>调整正在运行的容器大小（如果 InPlacePodVerticalScaling==true）：如果启用了InPlacePodVerticalScaling且有需要调整大小的正在运行的容器，此步骤将根据需要调整这些容器的大小。</li><li>创建普通容器：在此步骤中，创建并运行主要的普通容器。这些容器是Pod中的核心容器，负责运行应用程序或服务。</li></ol>]]></content:encoded>
            <category>Kubernets</category>
        </item>
        <item>
            <title><![CDATA[了解Kubernets对象]]></title>
            <link>https://zengjunwen.github.io/blog/了解Kubernets对象</link>
            <guid>https://zengjunwen.github.io/blog/了解Kubernets对象</guid>
            <pubDate>Fri, 07 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[在 Kubernets 中，对象能够表示集群的运行状态，代表着集群中运行的容器化应用及占用的资源和行为。本文将简单介绍下对象的数据结构。]]></description>
            <content:encoded><![CDATA[<p>在 Kubernets 中，对象能够表示集群的运行状态，代表着集群中运行的容器化应用及占用的资源和行为。本文将简单介绍下对象的数据结构。</p><p>先来看一下 Kubernets 的一个描述文件的部分内容：</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其中apiVersion、kind和metadata在每个对象中都有。其中apiVersion和kind共同确定了该YAML配置文件应该创建的对象类型。这里表示为创建核心API中api/vi中的Pod对象。</p><p><img loading="lazy" alt="image-20230707221301294" src="/assets/images/image-20230707221301294-85d9af05ed47024ce5caaa0188d1cd23.png" width="2844" height="944" class="img_ev3q"></p><p>而metadata为我们提供了识别唯一对象的信息，包括了虚拟集群的name和用于组织、分类的labels。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="对象">对象<a href="#对象" class="hash-link" aria-label="Direct link to 对象" title="Direct link to 对象">​</a></h2><p>Kubernets 中的对象都实现了一个叫 Object 的接口，接口部分内容如下：</p><p><img loading="lazy" alt="image-20230707222327104" src="/assets/images/image-20230707222327104-473b8a0098972cb2af0fae04926a0abc.png" width="2454" height="990" class="img_ev3q"></p><p>这些接口定义主要是用来获取具体对象中嵌套的 ObjectMeta 中的属性值，以Pod为例，其数据结构如下：</p><p><img loading="lazy" alt="image-20230707222912719" src="/assets/images/image-20230707222912719-503172c7dd8b470c6a560837c9f31c29.png" width="2982" height="942" class="img_ev3q"></p><p>其中 metav1.TypeMeta 保存了我们定义的对象的 apiVersion 和 kind，metav1.ObjectMeta 保存了我们定义的metadata，Spec 保存了我们定义的Spec，而 Status 记录了当前对象的运行状态。</p><p> Kubernetes 的控制器会不断获取集群中对象的运行状态，保证对象像期望的状态迁移。</p>]]></content:encoded>
            <category>Kubernets</category>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://zengjunwen.github.io/blog/welcome</link>
            <guid>https://zengjunwen.github.io/blog/welcome</guid>
            <pubDate>Sat, 01 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to my blog!]]></description>
            <content:encoded><![CDATA[<p>Welcome to my blog!</p>]]></content:encoded>
        </item>
    </channel>
</rss>